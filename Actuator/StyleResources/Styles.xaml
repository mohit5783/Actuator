<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:c="clr-namespace:Actuator">
	<ControlTemplate x:Key="ButtonTemplate"
					 TargetType="{x:Type Button}">
		<ControlTemplate.Resources>
			<Storyboard x:Key="HoverOn">
				<DoubleAnimation Duration="00:00:00.5000"
								 Storyboard.TargetName="BackgroundOver"
								 Storyboard.TargetProperty="Opacity"
								 To="0.65" />
				<DoubleAnimation Duration="00:00:00.5000"
								 Storyboard.TargetName="BackgroundOver_Highlight"
								 Storyboard.TargetProperty="Opacity"
								 To="0.65" />
			</Storyboard>
			<Storyboard x:Key="HoverOff">
				<DoubleAnimation Duration="00:00:02"
								 Storyboard.TargetName="BackgroundOver"
								 Storyboard.TargetProperty="Opacity"
								 To="0" />
				<DoubleAnimation Duration="00:00:02"
								 Storyboard.TargetName="BackgroundOver_Highlight"
								 Storyboard.TargetProperty="Opacity"
								 To="0" />
			</Storyboard>
			<Storyboard x:Key="PressedOn">
				<DoubleAnimation Duration="00:00:00.1000000"
								 Storyboard.TargetName="BackgroundPressed"
								 Storyboard.TargetProperty="Opacity"
								 To="0.84" />
				<DoubleAnimation Duration="00:00:00.1000000"
								 Storyboard.TargetName="BackgoundPressed_Highlight"
								 Storyboard.TargetProperty="Opacity"
								 To="0.65" />
			</Storyboard>
			<Storyboard x:Key="PressedOff">
				<DoubleAnimation Duration="00:00:00.4000000"
								 Storyboard.TargetName="BackgroundPressed"
								 Storyboard.TargetProperty="Opacity"
								 To="0" />
				<DoubleAnimation Duration="00:00:00.4000000"
								 Storyboard.TargetName="BackgoundPressed_Highlight"
								 Storyboard.TargetProperty="Opacity"
								 To="0" />
			</Storyboard>
			<Storyboard x:Key="FocusedOn">
				<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
											   Storyboard.TargetName="FocusVisualElement"
											   Storyboard.TargetProperty="(UIElement.Opacity)">
					<SplineDoubleKeyFrame KeyTime="00:00:00.3000000"
										  Value="1" />
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard x:Key="FocusedOff">
				<DoubleAnimationUsingKeyFrames BeginTime="00:00:01"
											   Storyboard.TargetName="FocusVisualElement"
											   Storyboard.TargetProperty="(UIElement.Opacity)">
					<SplineDoubleKeyFrame KeyTime="00:00:02"
										  Value="0" />
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
		</ControlTemplate.Resources>
		<Grid x:Name="Grid">
			<Border x:Name="BackgroundNorm"
					Background="#FF0B9BFF"
					Opacity="0.85"
					BorderThickness="1"
					BorderBrush="#FF8E8F8F"
					RenderTransformOrigin="0.5,0.5"
					CornerRadius="10" />
			<Border x:Name="BackgroundNorm_highlight"
					Margin="1"
					BorderBrush="#00FFFFFF"
					BorderThickness="1,0,1,1"
					CornerRadius="10"
					Opacity="0.85" />
			<Border x:Name="BackgroundOver"
					Background="Transparent"
					BorderBrush="White"
					BorderThickness="1"
					CornerRadius="10"
					Opacity="0" />
			<Border x:Name="BackgroundOver_Highlight"
					Margin="1"
					Background="#FF2EA834"
					BorderBrush="White"
					BorderThickness="1,0,1,1"
					CornerRadius="10"
					Opacity="0" />
			<Border x:Name="BackgroundPressed"
					Background="Black"
					BorderBrush="White"
					BorderThickness="1"
					CornerRadius="10"
					Opacity="0" />
			<Border x:Name="BackgoundPressed_Highlight"
					Background="Transparent"
					Margin="1"
					CornerRadius="8"
					Opacity="0" />
			<Border x:Name="Background_overlay"
					Margin="1,1,1,0"
					BorderThickness="1"
					CornerRadius="3,3,0,0"></Border>
			<Border x:Name="DisabledVisualElement"
					Background="#FFF1F1F1"
					BorderBrush="#FFB2B2B2"
					BorderThickness="1"
					CornerRadius="10"
					IsHitTestVisible="false"
					Visibility="Collapsed" />
			<ContentPresenter x:Name="contentPresenter"
							  Content="{TemplateBinding Content}"
							  ContentTemplate="{TemplateBinding ContentTemplate}"
							  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							  Margin="{TemplateBinding Padding}" />
			<TextBlock Panel.ZIndex="1"
					   x:Name="DisabledOverlay"
					   Text="{TemplateBinding Content}"
					   Foreground="#FF969696"
					   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
					   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
					   Margin="{TemplateBinding Padding}"
					   Visibility="Collapsed" />
			<Border x:Name="FocusVisualElement"
					Margin="1"
					BorderBrush="BlanchedAlmond"
					BorderThickness="1"
					CornerRadius="8"
					IsHitTestVisible="false"
					Opacity="0" />
			<Border x:Name="DefaultBorder"
					Margin="1"
					BorderBrush="White"
					BorderThickness="1"
					CornerRadius="8"
					IsHitTestVisible="false"
					Opacity="0" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsDefault"
					 Value="True">
				<Setter Property="Opacity"
						TargetName="DefaultBorder"
						Value="1" />
			</Trigger>
			<Trigger Property="IsKeyboardFocused"
					 Value="true">
				<Trigger.ExitActions>
					<BeginStoryboard x:Name="FocusedOff_BeginStoryboard"
									 Storyboard="{StaticResource FocusedOff}" />
				</Trigger.ExitActions>
				<Trigger.EnterActions>
					<BeginStoryboard x:Name="FocusedOn_BeginStoryboard"
									 Storyboard="{StaticResource FocusedOn}" />
				</Trigger.EnterActions>
			</Trigger>
			<Trigger Property="IsMouseOver"
					 Value="true">
				<Trigger.ExitActions>
					<BeginStoryboard Storyboard="{StaticResource HoverOff}"
									 x:Name="HoverOff_BeginStoryboard" />
				</Trigger.ExitActions>
				<Trigger.EnterActions>
					<BeginStoryboard Storyboard="{StaticResource HoverOn}" />
				</Trigger.EnterActions>
			</Trigger>
			<Trigger Property="IsPressed"
					 Value="true">
				<Trigger.ExitActions>
					<BeginStoryboard Storyboard="{StaticResource PressedOff}" />
				</Trigger.ExitActions>
				<Trigger.EnterActions>
					<BeginStoryboard Storyboard="{StaticResource PressedOn}" />
				</Trigger.EnterActions>
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="true" />
			<Trigger Property="IsEnabled"
					 Value="false">
				<Setter Property="Foreground"
						Value="{DynamicResource DisabledForegroundBrush}" />
				<Setter Property="Visibility"
						TargetName="DisabledVisualElement"
						Value="Visible" />
				<Setter Property="Visibility"
						TargetName="DisabledOverlay"
						Value="Visible" />
				<Setter Property="Visibility"
						TargetName="contentPresenter"
						Value="Collapsed" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="Button">
		<Setter Property="Foreground"
				Value="White" />
		<Setter Property="FontWeight"
				Value="SemiBold" />
		<Setter Property="FontFamily"
				Value="Bookman Old Style" />
		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="VerticalAlignment"
				Value="Stretch" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="Template"
				Value="{DynamicResource ButtonTemplate}" />
	</Style>	
    
	<LinearGradientBrush x:Key="TitleGradient"
						 StartPoint="0,0"
						 EndPoint="1,1">
		<GradientStop Color="Gray" />
		<GradientStop Color="WhiteSmoke"
					  Offset="0.25" />
		<GradientStop Color="White"
					  Offset="0.50" />
		<GradientStop Color="WhiteSmoke"
					  Offset="0.75" />
		<GradientStop Color="Gray"
					  Offset="1" />
	</LinearGradientBrush>
    
    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background"
				Value="Transparent" />
        <Setter Property="HorizontalContentAlignment"
				Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
				Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding"
				Value="2,0,0,0" />
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
							CornerRadius="8"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							Padding="{TemplateBinding Padding}"
							SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
								 Value="true">
                            <Setter Property="Background"
									TargetName="Bd"
									Value="#FF5FAFFF" />
                            <Setter Property="FontWeight"
									Value="Bold" />
                            <Setter Property="Foreground"
									Value="Black" />
                        </Trigger>
                        <Trigger Property="IsSelected"
								 Value="false">
                            <Setter Property="FontWeight"
									Value="Light" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
								 Value="true">
                            <Setter Property="Background"
									TargetName="Bd"
									Value="#88FFC89A" />
                            <Setter Property="Foreground"
									Value="#FF0023FF" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
										   Value="true" />
                                <Condition Property="Selector.IsSelectionActive"
										   Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
									TargetName="Bd"
									Value="#FF5FAFFF" />
                            <Setter Property="Foreground"
									Value="Black" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
								 Value="false">
                            <Setter Property="Foreground"
									Value="Gray" />
                        </Trigger>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
														 From="0"
														 To="1"
														 Duration="0:0:0.5" />
                                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleY"
														 From="0"
														 Duration="0:0:0.6" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>